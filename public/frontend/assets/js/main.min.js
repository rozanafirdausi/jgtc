var Site = (function () {
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }



var classes = {
    isLoading: 'is-Loading',
    isActive: 'is-active',
    isClose: 'is-close',
    noScroll: 'no-scroll'
};

var $win = $(window);
var $body = $('body');
var $doc = $(document);

function noop() {}







































function queryAll(context) {
    return function (selector) {
        return [].concat(_toConsumableArray(context.querySelectorAll(selector)));
    };
}











function exist(selector) {
    return new Promise(function (resolve, reject) {
        var elems = queryAll(document)(selector);

        if (elems.length) resolve(elems);
        reject('no element found for ' + selector);
    });
}

function toJqueryObject(elements) {
    return $(elements);
}





var slickPrev = '<button type="button" class="slick-prev" type="button"><span class="fas fa-long-arrow-alt-left"></span></button>';
var slickNext = '<button type="button" class="slick-next" type="button"><span class="fas fa-long-arrow-alt-right"></span></button>';

function createSlider() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    return function ($el) {
        return new Promise(function (resolve, reject) {
            if (!$el.length) {
                reject('No element ' + $el + ' found.');
            }

            var defaults = {
                accessibility: false
                // draggable: false
            };

            $el.on('init', function () {
                resolve($el);
            });

            $el.slick(_extends({}, defaults, opts));
        });
    };
}

var activeStateMobile = function () {
    document.addEventListener('touchstart', noop, true);
};

var WPViewportFix = function () {
    var isIEMobile = '-ms-user-select' in document.documentElement.style && navigator.userAgent.match(/IEMobile/);

    if (!isIEMobile) return;

    var style = document.createElement('style');
    var fix = document.createTextNode('@-ms-viewport{width:auto!important}');
    style.appendChild(fix);
    document.head.appendChild(style);
};

var objectFitPolyfill = function () {
    objectFitImages();
};

var formValidation = function () {
    var init = function init(opts) {
        return function ($form) {
            return $form.bazeValidate(opts);
        };
    };

    exist('.js-validate').then(toJqueryObject).then(init({
        classInvalid: 'form-input--error',
        classValid: 'form-input--success'
    })).catch(noop);
};

var mainNav = function () {
    var $mainNav = $('.main-nav');
    var btnTrigger = '.btn-mainnav';

    $mainNav.on('click', btnTrigger, function (e) {
        $mainNav.toggleClass(classes.isActive);
        $body.toggleClass(classes.noScroll);
    });
};

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var lineupSlider = function () {
    var lineUpSlider = '.line-up-carousell';
    exist(lineUpSlider).then(toJqueryObject).then(function ($lineUpSlider) {
        var _$lineUpSlider$slick;

        $lineUpSlider.slick((_$lineUpSlider$slick = {
            lazyLoad: 'ondemand',
            slidesToShow: 1,
            prevArrow: slickPrev,
            nextArrow: slickNext,
            infinite: false,
            dots: true
        }, _defineProperty(_$lineUpSlider$slick, 'slidesToShow', 5), _defineProperty(_$lineUpSlider$slick, 'slidesToScroll', 5), _defineProperty(_$lineUpSlider$slick, 'responsive', [{
            breakpoint: 1280,
            settings: {
                slidesToShow: 4,
                slidesToScroll: 4
            }
        }, {
            breakpoint: 1024,
            settings: {
                slidesToShow: 3,
                slidesToScroll: 3
            }
        }, {
            breakpoint: 600,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2,
                dots: false
            }
        }]), _$lineUpSlider$slick));
    }).catch(noop);
};

var tabNav = function () {
    exist('.tab-container').then(toJqueryObject).then(function ($tabNav) {
        var tabNav = '.tab-nav__item > a:not([data-filter])';
        var tabFilter = '.tab-nav__item > [data-filter]';

        $tabNav.on('click', tabNav, function (e) {
            var $this = $(e.currentTarget);
            var tabTarget = $this.attr('href');
            var $tabTarget = $(tabTarget);
            var $parent = $this.parent();
            e.preventDefault();

            $tabTarget.siblings().removeClass(classes.isActive);
            $tabTarget.addClass(classes.isActive);
            $parent.siblings().removeClass(classes.isActive);
            $parent.addClass(classes.isActive);
        });

        $tabNav.on('click', tabFilter, function (e) {
            var $this = $(e.currentTarget);
            var targetFilter = $this.data('filter');
            var $targetFilter = $('[data-filterlist="' + targetFilter + '"]');
            e.preventDefault();

            $this.parent().siblings().removeClass(classes.isActive);
            $this.parent().addClass(classes.isActive);
            $targetFilter.siblings().hide();
            $targetFilter.show();
        });

        for (var i = 0; i < $tabNav.length; i++) {
            var $thisTab = $tabNav.eq(i);
            var firstTab = $thisTab.attr('data-first-tab');
            var navFilter = '[data-filter="' + firstTab + '"]';
            var $nav = $thisTab.find(navFilter);
            var $panel = $thisTab.find('[data-filterlist="' + firstTab + '"]');

            $nav.parent().addClass(classes.isActive);
            $panel.show();
        }
    }).catch(noop);
};

var headerToggle = function () {
    var $header = $('.site-header');
    var $main = $('.sticky-footer-container');
    var headerFixed = 'header-fixed';

    $win.scroll(function (e) {
        var isTop = $main.offset().top;
        var readyTop = isTop + 100;

        if ($win.scrollTop() > readyTop) {
            $header.addClass(classes.isActive);
            $body.addClass(headerFixed);
        } else if ($win.scrollTop() === isTop) {
            $header.removeClass(classes.isActive);
            $body.removeClass(headerFixed);
        }
    });
};

var lazyLoadImage = function () {
    exist('.item-heavy').then(toJqueryObject).then(function ($itemHeavy) {
        $itemHeavy.lazyload({
            threshold: 200,
            skip_invisible: false
        });
    }).catch(noop);
};

var accordeon = function () {
    exist('.accordeon').then(toJqueryObject).then(function ($accordeon) {
        var item = '.accordeon__item';
        var content = '.accordeon-content';
        $(item + '.' + classes.isActive + ' ' + content).show();

        $accordeon.on('click', '.btn-accordeon', function (e) {
            var $this = $(e.currentTarget);
            var $item = $this.parents(item);
            var $allItems = $item.siblings();
            var $content = $this.siblings(content);
            var $allContent = $allItems.find(content);

            $allItems.removeClass(classes.isActive);
            $allContent.slideUp();
            $item.toggleClass(classes.isActive);
            $content.slideToggle();
        });
    }).catch(noop);
};

var sectionInfo = function () {
    exist('.section-info').then(toJqueryObject).then(function ($sectionInfo) {
        $sectionInfo.next().addClass('next-info');
    }).catch(noop);
};

var sponsorSlide = function () {
    exist('.sponsor-slider').then(toJqueryObject).then(createSlider({
        lazyLoad: 'ondemand',
        dots: true,
        slidesToShow: 5,
        slidesToScroll: 5,
        prevArrow: slickPrev,
        nextArrow: slickNext,
        infinite: false,
        responsive: [{
            breakpoint: 1280,
            settings: {
                slidesToShow: 4,
                slidesToScroll: 4
            }
        }, {
            breakpoint: 1024,
            settings: {
                slidesToShow: 3,
                slidesToScroll: 3
            }
        }, {
            breakpoint: 600,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2,
                dots: false
            }
        }]
    })).catch(noop);
};

var countdown = function () {
    exist('.countdown').then(toJqueryObject).then(function ($countdown) {
        var endDate = $countdown.data('enddate');
        var countDownDate = new Date(endDate).getTime();

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get todays date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));
            var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));
            var seconds = Math.floor(distance % (1000 * 60) / 1000);

            // console.log(distance, days, hours, minutes, seconds)

            if (distance < 0) {
                days = 0;
                hours = 0;
                minutes = 0;
                seconds = 0;
                clearInterval(x);
            }

            var ui = '<div class="countdown__item">\n                    <div class="time">' + days + '</div>\n                    <div class="label">Days</div>\n                </div>\n                <div class="countdown__item">\n                    <div class="time">' + hours + '</div>\n                    <div class="label">Hours</div>\n                </div>\n                <div class="countdown__item">\n                    <div class="time">' + minutes + '</div>\n                    <div class="label">Minutes</div>\n                </div>\n                <div class="countdown__item">\n                    <div class="time">' + seconds + '</div>\n                    <div class="label">Seconds</div>\n                </div>';

            // Display the result in the element with id="demo"
            $countdown.html(ui);
        }, 1000);
    }).catch(noop);
};

var artistSlider = function () {
    exist('.video-artist-slider').then(toJqueryObject).then(createSlider({
        dots: true,
        slidesToShow: 3,
        slidesToScroll: 3,
        arrows: false,
        infinite: false,
        appendDots: '#videoSlideDots',
        responsive: [{
            breakpoint: 1024,
            settings: {
                slidesToShow: 3,
                slidesToScroll: 3
            }
        }, {
            breakpoint: 600,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2
            }
        }]
    })).catch(noop);

    exist('.photo-artist-slider').then(toJqueryObject).then(createSlider({
        dots: true,
        slidesToShow: 4,
        slidesToScroll: 4,
        arrows: false,
        infinite: false,
        appendDots: '#photoSlideDots',
        responsive: [{
            breakpoint: 1024,
            settings: {
                slidesToShow: 4,
                slidesToScroll: 4
            }
        }, {
            breakpoint: 600,
            settings: {
                slidesToShow: 3,
                slidesToScroll: 3
            }
        }, {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                slidesToScroll: 2
            }
        }]
    })).catch(noop);
};

var _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var colorbox = function () {
    exist('.colorbox').then(toJqueryObject).then(function ($colorbox) {
        var $video = $('.video-colorbox');
        var $photo = $('.photo-colorbox');
        var boxFrame = '#cboxLoadedContent, #cboxMiddleLeft, #cboxMiddleRight, #cboxTopCenter';
        var opts = {
            fixed: true,
            width: '100%',
            height: '100%',
            close: '',
            next: '',
            previous: '',
            transition: 'fade'

            // innerSize()

        };var videoColorbox = $video.colorbox(_extends$1({}, opts, {
            iframe: true,
            rel: 'video-colorbox',
            current: 'video {current} of {total}'

        }));

        var photoColorbox = $photo.colorbox(_extends$1({}, opts, {
            rel: 'photo-colorbox',
            current: 'photo {current} of {total}'
        }));

        $('#colorbox').on('click', boxFrame, function (e) {
            photoColorbox.colorbox.close();
            videoColorbox.colorbox.close();
        });

        $('#colorbox').on('click', '#cboxLoadedContent > *', function (e) {
            e.stopPropagation();
        });

        
    }).catch(noop);
};

var toggleNav = function () {
    exist('.toggle-nav').then(toJqueryObject).then(function ($toggleNav) {
        var $toggleBtn = $('[data-toggle]');

        $toggleBtn.on('click', function (e) {
            var $this = $(e.currentTarget);
            var targetToggle = $this.data('toggle');
            var $targetToggle = $('#' + targetToggle);
            var isActive = $this.hasClass(classes.isActive);

            if (isActive) {
                $this.removeClass(classes.isActive);
                $targetToggle.removeClass(classes.isActive);
            } else {
                $this.addClass(classes.isActive);
                $targetToggle.addClass(classes.isActive);
            }
        });
    }).catch(noop);
};

var App = {
    activeStateMobile: activeStateMobile,
    WPViewportFix: WPViewportFix,
    objectFitPolyfill: objectFitPolyfill,
    formValidation: formValidation,
    mainNav: mainNav,
    lineupSlider: lineupSlider,
    tabNav: tabNav,
    headerToggle: headerToggle,
    lazyLoadImage: lazyLoadImage,
    accordeon: accordeon,
    sectionInfo: sectionInfo,
    sponsorSlide: sponsorSlide,
    countdown: countdown,
    artistSlider: artistSlider,
    colorbox: colorbox,
    toggleNav: toggleNav
};

for (var fn in App) {
    App[fn]();
}

return App;

}());
